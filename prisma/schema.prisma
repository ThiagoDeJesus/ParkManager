// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Empresa {
  id                     Int      @id @default(autoincrement())
  nome                   String   @db.VarChar(100)
  cnpj                   String   @unique @db.VarChar(14)
  telefone               String   @db.VarChar(12)
  quantidade_vagas_moto  Int
  quantidade_vagas_carro Int
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt
  Endereco               Endereco @relation(fields: [enderecoId], references: [id])
  enderecoId             Int      @unique
  Vaga                   Vaga[]
}

model Endereco {
  id          Int      @id @default(autoincrement())
  cep         String   @db.VarChar(8)
  rua         String
  numero      String   @db.VarChar(5)
  bairro      String
  cidade      String
  estado      String   @db.VarChar(2)
  complemento String?
  Empresa     Empresa?
}

model Vaga {
  id               Int                @id @default(autoincrement())
  empresa          Empresa            @relation(fields: [empresaId], references: [id])
  empresaId        Int
  tipo             String             @db.VarChar(5)
  HistoricoVeiculo HistoricoVeiculo[]
}

model Veiculo {
  id               Int                @id @default(autoincrement())
  marca            String             @db.VarChar(20)
  modelo           String             @db.VarChar(20)
  cor              String             @db.VarChar(20)
  placa            String             @unique @db.VarChar(7)
  tipo             String             @db.VarChar(5)
  HistoricoVeiculo HistoricoVeiculo[]
}

model HistoricoVeiculo {
  id        Int      @id @default(autoincrement())
  vaga      Vaga     @relation(fields: [vagaId], references: [id])
  vagaId    Int
  veiculo   Veiculo  @relation(fields: [veiculoId], references: [id])
  veiculoId Int
  entrada   DateTime @default(now())
  saida     DateTime?
}
